---
- name: ensure all needde folders for {{ pgsql_name }} exist
  file: 
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    follow: yes
    mode: "{{ item.mode }}"
  with_items:
      - { path: "{{ pgsql_folder }}/etc/conf.d", state: 'directory', mode: '755' }
      - { path: "{{ pgsql_folder }}/etc/pg_ident.conf", state: 'touch', mode: '755' }
      - { path: "{{ pgsql_folder }}/run/postgresql", state: 'directory', mode: '755' }
      - { path: "{{ pgsql_folder }}/run/shm", state: 'directory', mode: '755' }
      - { path: "{{ pgsql_folder }}/var/lib/postgresql", state: 'directory', mode: '700' }
      - { path: "{{ pgsql_folder }}/var/log", state: 'directory', mode: '755' }

- name: download and extract {{ pgsql_name }}
  unarchive:
    src: https://get.enterprisedb.com/postgresql/postgresql-{{ pgsql_version }}-linux-x64-binaries.tar.gz
    dest: "{{ pgsq_base_folder }}"
    remote_src: True

- name: send config for {{ pgsql_name }}
  template:
    src:  "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
      - { src: "pg_hba.conf.j2", dest: "{{ pgsql_folder }}/etc/pg_hba.conf" }
      - { src: "postgresql.conf.j2", dest: "{{ pgsql_folder }}/etc/postgresql.conf" }
      - { src: "supervisor.conf.j2", dest: "{{ supervisor_folder }}/conf.d/{{ pgsql_name }}.conf" }

- name: command init db folder for {{ pgsql_name }}
  command: "{{ pgsql_folder }}/bin/pg_ctl initdb --pgdata={{ pgsql_name }}/var/lib/postgresql"

- name: reload Supervisor config to launch {{ pgsql_name }}
  command: "{{ supervisor_bin }}/supervisorctl update"

- name: command init defaults databases folder for {{ pgsql_name }}
  command: "{{ pgsql_folder }}/bin/createdb {{ ansible_user }} -p {{ pgsql_port }}"
  environment:
    PGHOST: "{{ pgsql_folder }}/run/postgresql"