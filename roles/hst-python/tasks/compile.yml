---
- name: unset current Python env variable
  shell: unset PYTHONPATH PYTHONHOME
  ignore_errors: yes

- name: ensure all needed folders exist
  file: path="{{ python_folder }}/{{ item }}" state=directory
  with_items:
    - src
    - builds

- name: purge pip cache
  file: path=~/.cache/pip state=absent

- name: download Python source
  get_url:
    url: https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tgz
    dest: "{{ python_folder }}/src/Python-{{ python_version }}.tgz"

- name: extract Python source
  unarchive:
    src: "{{ python_folder }}/src/Python-{{ python_version }}.tgz"
    dest: "{{ python_folder }}/src/"
    remote_src: True

- name: configure and make Python
  shell: chdir="{{ python_folder }}/src/Python-{{ python_version }}/" {{ item }}
  with_items:
    - ./configure --prefix={{ python_folder }}/builds/{{ python_version }} --enable-shared
    - make
    - make install
  environment:
    LDFLAGS: -Wl,-rpath={{ python_folder }}/builds/{{ python_version }}/lib

- name: add Python binary folder to env PATH
  lineinfile:
    create: yes
    dest: ~/.bash_profile
    line: PATH={{ python_folder }}/builds/{{ python_version }}/bin:$PATH

- name: use local pip egg
  shell: source ~/.bash_profile; python -m ensurepip
  args:
     executable: /bin/bash

- name: install pip package and virtualenv
  shell: source ~/.bash_profile; pip install {{ item }}
  with_items:
    - --upgrade pip
    - virtualenv
  args:
     executable: /bin/bash
