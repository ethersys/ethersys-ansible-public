---
- name: ensure all needed folders exist
  file: path={{ memcached_folder }}/{{ item }} state=directory
  with_items:
    - src
    - run
    - lib

- name: download actual Memcached source
  get_url:
    url: http://www.memcached.org/files/memcached-{{ memcached_version }}.tar.gz
    dest: "{{ memcached_folder }}/src/memcached-{{ memcached_version }}.tar.gz"
  when: (memcached_version > "1.6")

- name: download old Memcached source 
  get_url:
      url: http://www.memcached.org/files/old/memcached-{{ memcached_version }}.tar.gz
      dest: "{{ memcached_folder }}/src/memcached-{{ memcached_version }}.tar.gz"
  when: (not (memcached_version > "1.6"))


- name: extract Memcached source
  unarchive:
    src: "{{ memcached_folder }}/src/memcached-{{ memcached_version }}.tar.gz"
    dest: "{{ memcached_folder }}/src/"
    remote_src: True

- name: configure and compile Memcached
  shell: chdir={{ memcached_folder }}/src/memcached-{{ memcached_version }}/ ./configure && make

- name: send Supervisor config
  template:
    src:  supervisor.conf.j2
    dest: "{{ supervisor_folder }}/conf.d/{{ memcached_name }}.conf"

- name: reload Supervisor config to launch Memcached
  command: "{{ supervisor_bin }}/supervisorctl update"

- name: download Memcached lib source
  get_url:
    url: https://launchpad.net/libmemcached/1.0/{{ memcached_lib_version }}/+download/libmemcached-{{ memcached_lib_version }}.tar.gz
    dest: "{{ memcached_folder }}/src/libmemcached-{{ memcached_lib_version }}.tar.gz"

- name: extract Memcached lib source
  unarchive:
    src: "{{ memcached_folder }}/src/libmemcached-{{ memcached_lib_version }}.tar.gz"
    dest: "{{ memcached_folder }}/src/"
    remote_src: True

- name: configure and compile Memcached lib
  shell: chdir={{ memcached_folder }}/src/libmemcached-{{ memcached_lib_version }}/ {{ item }}
  with_items:
    - ./configure --prefix={{ memcached_folder }}/lib

- name: patch Memcached lib Makefile
  replace:
    path: "{{ memcached_folder }}/src/libmemcached-{{ memcached_lib_version }}/Makefile"
    regexp: '^({{ item }} =)(.*)$'
    replace: '\1\2 -fpermissive'
  with_items:
    - CFLAGS
    - CXXFLAGS

- name: configure and compile Memcached lib
  shell: chdir={{ memcached_folder }}/src/libmemcached-{{ memcached_lib_version }}/ {{ item }}
  with_items:
    - make
    - make install

- name: download Memcached PHP module source
  get_url:
    url: https://pecl.php.net/get/memcached-{{ memcached_php_version }}.tgz
    dest: "{{ memcached_folder }}/src/memcached-{{ memcached_php_version }}.tgz"

- name: extract Memcached PHP module source
  unarchive:
    src: "{{ memcached_folder }}/src/memcached-{{ memcached_php_version }}.tgz"
    dest: "{{ memcached_folder }}/src/"
    remote_src: True

- name: configure and compile Memcached PHP module
  shell: chdir={{ memcached_folder }}/src/memcached-{{ memcached_php_version }}/ {{ item }}
  with_items:
    - phpize
    - ./configure --prefix={{ memcached_folder }}/lib --with-libmemcached-dir={{ memcached_folder }}/lib --disable-memcached-sasl
    - make
