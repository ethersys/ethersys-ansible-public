---
- name: ensure all airflow folders exist
  file: path="{{ item }}" state=directory
  with_items:
    - "{{ airflow_folder }}"
    - ~/airflow

- name: send Airflow config
  template:
    src:  airflow.cfg.j2
    dest: /home/{{ ansible_user }}/{{ airflow_data_folder }}/airflow.cfg
    force: no

- name: check if virtualenv exist
  stat: path="{{ airflow_folder }}"
  register: virtualenv_folder

- name: create airflow virtualenv if it do not exist
  shell: source ~/.bash_profile; virtualenv {{ airflow_folder }}
  args:
     executable: /bin/bash
  when: not virtualenv_folder.stat.exists

- name: check if airflow use .local path
  stat:
    path: /home/{{ ansible_user }}/.local/bin/airflow
  register: airflow_local

- name: register airflow bin path
  set_fact:
    airflow_bin: /home/{{ ansible_user }}/.virtualenvs/airflow/bin
  when: not airflow_local.stat.exists

- name: register airflow bin path
  set_fact:
    airflow_bin: /home/{{ ansible_user }}/.local/bin
  when: airflow_local.stat.exists

- name: install and init airflow
  shell: source ~/.bash_profile; source {{ airflow_folder }}/bin/activate; {{ item }}
  with_items:
    - pip install MySQL-python
    - pip install airflow=={{ airflow_version }}
    - pip install airflow[hive]=={{ airflow_version }}
    - airflow initdb
  args:
     executable: /bin/bash
  environment:
    PATH: /home/{{ ansible_user }}/.local/bin:{{ ansible_env.PATH }}

- name: send Supervisor config
  template:
    src:  supervisor.conf.j2
    dest: "{{ supervisor_folder }}/conf.d/{{ airflow_name }}.conf"

- name: reload Supervisor config to launch Redis
  command: "{{ supervisor_bin }}/supervisorctl update"
