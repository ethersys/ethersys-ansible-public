---
- name: ensure all airflow folders exist
  file: path="{{ item }}" state=directory follow=yes
  with_items:
    - "/home/{{ ansible_user }}/airflow"
    - "{{ airflow_home }}"

- name: generate fernet key
  shell: openssl rand -base64 32
  register: fernet_key_reg

- name: extract fernet key var
  set_fact: 
    fernet_key={{ fernet_key_reg.stdout }}


- name: generate secret key
  shell: openssl rand -hex 30
  register: secret_key_reg

- name: extract secret key var
  set_fact: 
    secret_key={{ secret_key_reg.stdout }}

- name: send Airflow config
  template:
    src:  airflow.cfg
    dest: "{{ airflow_home }}/airflow.cfg"
    force: no

- name: register airflow bin path
  set_fact:
    airflow_bin: /home/{{ ansible_user }}/.local/bin

- name: install and init airflow
  shell: chdir={{ airflow_home }} source ~/.bash_profile; {{ item }}
  with_items:
    #- pip install MySQL-python
    - pip install apache-airflow=={{ airflow_version }}
    - pip install apache-airflow[hive]=={{ airflow_version }}
    - airflow db init
    - airflow users create --username {{ airflow_user }} --firstname ethersys --lastname {{ airflow_user }} --role Admin --email {{ ansible_user }}@ethersys.host --password {{ airflow_password }}
  args:
     executable: /bin/bash
  environment:
    PATH: /home/{{ ansible_user }}/.local/bin:{{ ansible_env.PATH }}
    AIRFLOW_HOME: "{{ airflow_home }}"
    PYTHON_VERSION: "{{ python_version }}"

- name: send Supervisor config
  template:
    src:  supervisor.conf
    dest: "{{ supervisor_folder }}/conf.d/{{ airflow_name }}.conf"

- name: reload Supervisor config to launch Supervisor
  command: "{{ supervisor_bin }}/supervisorctl update"
  environment:
    PYTHON_VERSION: "{{ python_version }}"